* denote-tree

denote-tree is a simple utility, that allows you to see and move within tree
structure of your notes with standard GNU Emacs movement keys.
** Usage

Just clone this very repository and enable the package:

#+begin_src emacs-lisp
 (require 'denote-tree)
#+end_src

The entry point function is ~denote-tree~, which acts on current buffer
searching for any org-style links within it.

It is able to handle cyclical nodes and provides a mechanism to move between
those cyclical nodes (called "teleportations") by default. As a drawback, it is
pretty stupid and has to redraw entire thing from scratch if anything changes.

User can customize ~denote-tree-node-face~ and ~denote-tree-circular-node-face~
to make them more visible.  With a bit of hacking it is also feasible to
implement colored node titles.

*** Keybindings for =*denote-tree*= buffer

| Keybinding | Function                |
|------------+-------------------------|
| n          | denote-tree-next-node   |
| p          | denote-tree-prev-node   |
| f          | denote-tree-child-node  |
| b          | denote-tree-parent-node |
| RET        | denote-tree-enter-node  |

*** Visualization

#+begin_example
  '-* Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    +-* Phasellus at dui in ligula mollis ultricies.
    | '-* Nullam libero mauris, consequat quis, varius et, dictum id, arcu.
    |   '-* Nulla posuere.
    +-* Nunc aliquet, augue nec adipiscing interdum,
    | '-* Donec vitae dolor.
    '-* Proin quam nisl, tincidunt et, mattis eget, convallis nec, purus.
    | +-* Nam euismod tellus id erat.
    | '-* Donec pretium posuere tellus.
    |   '-* Nullam libero mauris, consequat quis, varius et, dictum id, arcu.
    +-* Vestibulum convallis, lorem a tempus semper.
    '-* Dui dui euismod elit, vitae placerat urna tortor vitae lacus.
#+end_example

** Contributing

As usual, contributions are always welcome. Feel free to open an issue on the
issue tracker, if you find a bug, have an idea, etc. Same with code
contributions.

** To-Do list
*** Nice to have

- [X] Make it major mode agnostic;
- [X] give the user the ability to colorize node titles;
- [X] unite traversal functions;
- [ ] smarter redrawing of a tree.

*** Bare minimum before going public

- [X] Keep the position of the point in parent node when ascending, descending;
- [X] implement /teleportations/ when encountering the node that cycles up in
  the tree;
- [X] handle the movement with teleportations;
- [X] customization of /look and feel/ of the tree.
